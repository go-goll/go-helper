// Code generated by zero model. DO NOT EDIT.
package internal

import (
	"time"

	"gorm.io/gorm"
)

// New{{.TableName}}Dao custom table name
func New{{.TableName}}Dao(ormDB *gorm.DB) {{.TableName}}Dao {
	ormDB.AutoMigrate({{.TableName}}Obj{})
	return {{.TableName}}Dao{ DB: ormDB}
}

// {{.TableName}}Obj data model
type {{.TableName}}Obj struct {
	{{range $index,$elem := .Fields}}{{$elem.Name}} {{$elem.Type}} `gorm:"{{$elem.Tag}}"` {{if $elem.Comment}}// {{$elem.Comment}}{{end}}
	{{end}}
}

// {{.TableName}} custom db table
func (d {{.TableName}}Obj)TableName() string {
	return "{{toSnake .TableName}}"
}

// {{.TableName}}Dao data access object
type {{.TableName}}Dao struct {
	DB *gorm.DB
}

// Insert{{.TableName}} create object
func (d {{.TableName}}Dao)Insert{{.TableName}}(obj *{{.TableName}}Obj) error {
	return d.DB.Create(obj).Error
}

// Delete{{.TableName}} delete object
func (d {{.TableName}}Dao)Delete{{.TableName}}({{toLowerCamel .Primary.Name}} {{.Primary.Type}}) error {
	return d.DB.Where("{{toSnake .Primary.Name}}=?", {{toLowerCamel .Primary.Name}}).Delete(&{{.TableName}}Obj{}).Error
}

// Update{{.TableName}} update object
func (d {{.TableName}}Dao)Update{{.TableName}}({{toLowerCamel .Primary.Name}} {{.Primary.Type}}, fields map[string]interface{}) error {
	return d.DB.Model({{.TableName}}Obj{}).Where("{{toSnake .Primary.Name}}=?", {{toLowerCamel .Primary.Name}}).
	  Updates(fields).Error
}

// Select{{.TableName}} select object
func (d {{.TableName}}Dao)Select{{.TableName}}({{toLowerCamel .Primary.Name}} {{.Primary.Type}}) (*{{.TableName}}Obj, error) {
	obj := new({{.TableName}}Obj)
	err := d.DB.Where("{{toSnake .Primary.Name}}=?", {{toLowerCamel .Primary.Name}}).First(obj).Error
	return obj, err
}

{{.IndexGo}}
